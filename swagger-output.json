{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Skill Tree API-Plaform",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "http://localhost:8080/",
      "description": "Local Development server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "The endpoints for User information"
    },
    {
      "name": "Skill",
      "description": "The endpoints for Skill information"
    },
    {
      "name": "Item",
      "description": "The endpoints for Item information"
    },
    {
      "name": "Task",
      "description": "The endpoints for Task information"
    },
    {
      "name": "Challenge",
      "description": "The endpoints for Challenge information"
    },
    {
      "name": "Controller",
      "description": "The endpoints for root controller. [Development only?]"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for retrieving skills",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A collection of skills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createChallenge": {
      "post": {
        "tags": [
          "Challenge"
        ],
        "description": "Endpoint for creating a challenge",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/updateChallenge": {
      "put": {
        "tags": [
          "Challenge"
        ],
        "description": "Endpoint for updating a challenge",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteChallenge": {
      "delete": {
        "tags": [
          "Challenge"
        ],
        "description": "Endpoint for deleting a challenge",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getItems": {
      "get": {
        "tags": [
          "Item"
        ],
        "description": "Endpoint for retrieving an item",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A collection of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createItem": {
      "post": {
        "tags": [
          "Item"
        ],
        "description": "Endpoint for creating an item",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/updateItem": {
      "put": {
        "tags": [
          "Item"
        ],
        "description": "Endpoint for updating an item",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteItem": {
      "delete": {
        "tags": [
          "Item"
        ],
        "description": "Endpoint for deleting an item",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/available": {
      "get": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for retrieving available skills",
        "parameters": [],
        "responses": {}
      }
    },
    "/createSkill": {
      "post": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for creating a skill",
        "parameters": [],
        "responses": {
          "201": {
            "description": "A skill object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/startSkill": {
      "post": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for starting a skill",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skillid": {
                    "example": "any"
                  },
                  "userid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/skipSkill": {
      "post": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for skipping a skill",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "example": "any"
                  },
                  "skillid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/revertSkill": {
      "post": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for reverting a skill",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skillID": {
                    "example": "any"
                  },
                  "userid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cancelSkill": {
      "post": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for cancelling a skill",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "example": "any"
                  },
                  "skillid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/inProgress": {
      "get": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for retrieving in-progress skills",
        "parameters": [
          {
            "name": "userid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of skills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateSkill": {
      "put": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for updating a skill",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteSkill": {
      "delete": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for deleting a skill",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAllInList": {
      "get": {
        "tags": [
          "Skill"
        ],
        "description": "Endpoint for retrieving all skills",
        "parameters": [
          {
            "name": "skills",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of skills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currentTasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "description": "Endpoint for retrieving current tasks",
        "parameters": [
          {
            "name": "userid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recentTasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "description": "Endpoint for retrieving recent tasks",
        "parameters": [
          {
            "name": "userid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateTask": {
      "post": {
        "tags": [
          "Task"
        ],
        "description": "Endpoint for updating a task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskid": {
                    "example": "any"
                  },
                  "day": {
                    "example": "any"
                  },
                  "checked": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteTask": {
      "post": {
        "tags": [
          "Task"
        ],
        "description": "Endpoint for deleting a task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for retrieving a user",
        "parameters": [
          {
            "name": "discordid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for creating a User",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "description": "name of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "description": "password of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discordid",
            "in": "query",
            "required": false,
            "description": "discord ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "User information."
        }
      }
    },
    "/registerDiscord": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for registering a user",
        "parameters": [
          {
            "name": "username,password",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User edited successfully."
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for authentifying a User",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "description": "password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/loginDiscord": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for authenticating a user",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "description": "name of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "description": "password of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discordid",
            "in": "query",
            "required": false,
            "description": "discord ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "User information."
        }
      }
    },
    "/updateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for updating a user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "example": "any"
                  },
                  "character": {
                    "example": "any"
                  },
                  "difficulty": {
                    "example": "any"
                  },
                  "timezone": {
                    "example": "any"
                  },
                  "baselocation": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateXPHistory": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for updating the xp history of a user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "xp": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateTimezone": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for updating a user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "baselocation": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateBaseLocation": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for updating a user",
        "parameters": [],
        "responses": {}
      }
    },
    "/getAllInTimezone": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for getting all the users in a timezone",
        "parameters": [
          {
            "name": "offset",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getAll": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for getting all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "pic": {
            "type": "string",
            "example": "https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg"
          },
          "level": {
            "type": "number",
            "example": 5
          },
          "dm_enabled": {
            "type": "boolean",
            "example": true
          },
          "username": {
            "type": "string",
            "example": "John_Doe"
          },
          "password": {
            "type": "string",
            "example": "mias87dh32d7h36gdasdghyh1ds8326ga6w8d"
          },
          "discordid": {
            "type": "number",
            "example": 1234567890
          },
          "xp": {
            "type": "number",
            "example": 1500
          },
          "xpHistory": {
            "type": "number",
            "example": 12345
          },
          "items": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          },
          "completed": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          },
          "inprogress": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          },
          "difficulty": {
            "type": "string",
            "example": "easy"
          },
          "character": {
            "type": "string",
            "example": "male"
          },
          "timezone": {
            "type": "string",
            "example": "GMT+0:00"
          },
          "baseLocation": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          },
          "lastTracked": {
            "type": "string",
            "example": "9999-12-31 11:59:59"
          },
          "numDaysTracked": {
            "type": "number",
            "example": 999
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Example_I"
          },
          "level": {
            "type": "number",
            "example": 99
          },
          "goal": {
            "type": "string",
            "example": ""
          },
          "frequency": {
            "type": "number",
            "example": 99
          },
          "interval": {
            "type": "array",
            "example": [
              "day",
              "week",
              "month",
              "year"
            ],
            "items": {
              "type": "string"
            }
          },
          "timelimit": {
            "type": "string",
            "example": ""
          },
          "xp": {
            "type": "number",
            "example": 10
          },
          "category": {
            "type": "string",
            "example": ""
          },
          "requires": {
            "type": "array",
            "example": [],
            "items": {}
          },
          "children": {
            "type": "array",
            "example": [],
            "items": {}
          }
        },
        "xml": {
          "name": "Skill"
        }
      },
      "Challenge": {
        "type": "object",
        "properties": {
          "goal": {
            "type": "string",
            "example": "Example Goal"
          },
          "xp": {
            "type": "number",
            "example": 1234567890
          },
          "category": {
            "type": "string",
            "example": "Example Category"
          },
          "requires": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          }
        },
        "xml": {
          "name": "Challenge"
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "skillID": {
            "type": "function"
          },
          "userID": {
            "type": "function"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "array",
                "example": [
                  false,
                  false,
                  false
                ],
                "items": {
                  "type": "boolean"
                }
              }
            }
          },
          "startDate": {
            "type": "number",
            "example": 1657388404447
          },
          "completed": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "Task"
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Item Name"
          },
          "link": {
            "type": "string",
            "example": "https://www.link_to_item_information.com/"
          },
          "emoji": {
            "type": "string",
            "example": "Emoji"
          },
          "requires": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          }
        },
        "xml": {
          "name": "Item"
        }
      },
      "AddSkill": {
        "type": "object",
        "properties": {
          "iconName": {
            "type": "string",
            "example": "Icon_A"
          },
          "title": {
            "type": "string",
            "example": "Example_I"
          },
          "level": {
            "type": "string",
            "example": ""
          },
          "goal": {
            "type": "string",
            "example": ""
          },
          "time": {
            "type": "string",
            "example": ""
          },
          "frequency": {
            "type": "array",
            "example": [
              "daily",
              "weekly",
              "monthly",
              "annually"
            ],
            "items": {
              "type": "string"
            }
          },
          "xp": {
            "type": "number",
            "example": 10
          },
          "category": {
            "type": "string",
            "example": ""
          },
          "requirements": {
            "type": "array",
            "example": [],
            "items": {}
          },
          "children": {
            "type": "array",
            "example": [],
            "items": {}
          }
        },
        "xml": {
          "name": "AddSkill"
        }
      },
      "AddUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "John_Doe"
          },
          "password": {
            "type": "string",
            "example": "mias87dh32d7h36gdasdghyh1ds8326ga6w8d"
          },
          "pic": {
            "type": "string",
            "example": "https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg"
          },
          "exp": {
            "type": "number",
            "example": 1500
          },
          "level": {
            "type": "number",
            "example": 5
          },
          "items": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          },
          "skillscompleted": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          },
          "skillsinprogress": {
            "type": "array",
            "example": [
              null
            ],
            "items": {
              "type": "function"
            }
          }
        },
        "xml": {
          "name": "AddUser"
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "API-KEY",
        "description": "A key used to communicate with the API"
      }
    }
  }
}